<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">
        
	<!-- 1.注解扫描包，加载bean -->
	<context:component-scan base-package="com.qf.book">
		<!-- 不扫描@Controller注解的类 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 2.加载属性文件 -->
	<bean id="annotationPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:init.properties</value>
			</list>
		</property>
	</bean>
	<!-- 3.配置数据源：jdbc+pool -->
	<!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"-->
		<!--destroy-method="close">-->
		<!--<property name="driverClass" value="${jdbc.driver}" />//这配置的时MySql数据库-->
		<!--<property name="jdbcUrl" value="${jdbc.url}" />-->
		<!--<property name="user" value="${jdbc.username}" />-->
		<!--<property name="password" value="${jdbc.password}" />-->
		<!--&lt;!&ndash; 请求超时时间 &ndash;&gt;-->
		<!--<property name="checkoutTimeout" value="30000" />-->
		<!--&lt;!&ndash; 每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 &ndash;&gt;-->
		<!--<property name="idleConnectionTestPeriod" value="30" />-->
		<!--&lt;!&ndash; 连接数据库连接池最大空闲时间 &ndash;&gt;-->
		<!--<property name="maxIdleTime" value="30" />-->
		<!--&lt;!&ndash; 连接池初始化连接数 &ndash;&gt;-->
		<!--<property name="initialPoolSize" value="5" />-->
		<!--<property name="minPoolSize" value="5" />-->
		<!--<property name="maxPoolSize" value="20" />-->
		<!--&lt;!&ndash;当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 &ndash;&gt;-->
		<!--<property name="acquireIncrement" value="5" />-->
	<!--</bean>-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 请求超时时间 -->
		<property name="checkoutTimeout" value="30000" />
		<!-- 每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->
		<property name="idleConnectionTestPeriod" value="30" />
		<!-- 连接数据库连接池最大空闲时间 -->
		<property name="maxIdleTime" value="30" />
		<!-- 连接池初始化连接数 -->
		<property name="initialPoolSize" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
		<property name="acquireIncrement" value="5" />
	</bean>
	<!-- 4.配置jpa+hibernate -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<!-- 扫描具有@Entity的类，并和数据库表进行映射 -->
		<property name="packagesToScan" value="com.qf.book"></property>
		<!-- hibernate 配置 -->
		<property name="jpaProperties">
			<props>
				<!--开启一级缓存-->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!-- 开启二级缓存 ehcache -->
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.cache.provider_configuration_file_resource_path}
				</prop>
			</props>
		</property>
	</bean>

	<!-- 5.配置事务 - jpa 使@Transational生效 -->
    <bean id="transactionManager"
        class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"></property>    
    </bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 6.配置 SpringData -->
    <jpa:repositories base-package="com.qf.book"
        entity-manager-factory-ref="entityManagerFactory"
        transaction-manager-ref="transactionManager"/>
</beans>